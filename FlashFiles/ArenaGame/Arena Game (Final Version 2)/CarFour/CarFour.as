package {	import flash.display.*;	import flash.events.*;	public class CarFour extends MovieClip	{		public var refM:MovieClip;		public var moveSpeedMax4:Number = 2000;		public var rotateSpeedMax4:Number = 15;		public var decay4:Number = .98;		public var destinationX4:int = 0;		public var destinationY4:int = 0;		public var _dx4:Number = 0;		public var _dy4:Number = 0;		public var _vx4:Number = 0;		public var _vy4:Number = 0;		public var trueRotation4:Number = 0;		public var xDist4:Number = 0;		public var yDist4:Number = 0;		public var directDist4:Number = 0;		public var carFourIndRotation:Number;		public var targetFourState:Boolean = false;		public var targetFourCount:Number = 0;		public function CarFour()		{			stage.addEventListener(Event.ENTER_FRAME,gLoop);			refM = MovieClip(this.parent);		}		function gLoop(event:Event):void		{			if (refM.pausee == false)			{				carFourIndicatorRotate();				refM.cFourTarg.visible = false;				if (refM.gameTimerM >= 1)				{					carFourMovement();				}			}		}		public function carFourMovement()		{			if (refM.carFourHitState == false)			{				refM.carFourCount +=  1;				decay4 = 0.7;				rotateSpeedMax4 = 100;				moveSpeedMax4 = 1500;				if (refM.carFourCount > 15)				{					rotateSpeedMax4 = 10;					refM.cFourTarg.x = refM.mCar.x;					refM.cFourTarg.y = refM.mCar.y;				}				if (refM.carFourCount > 80)				{					refM.carFourHitState = true;					refM.carFourCount = 0;				}			}			if (refM.carFourHitState == true)			{				rotateSpeedMax4 = 20;				decay4 = .98;				refM.cFourTarg.x = refM.mCar.x;				refM.cFourTarg.y = refM.mCar.y;			}			for (var i:uint = 0; i < refM.carFourBoxesArray.length; i ++)			{				for (var j:uint = 0; j < refM.carOneBoxesArray.length; j ++)				{					if (refM.carOneBoxesArray[j].hitTestObject(refM.carFourBoxesArray[i]))					{						this.x -=  _vx4;						this.y -=  _vx4;					}				}				for (var s:uint = 0; s < refM.carTwoBoxesArray.length; s ++)				{					if (refM.carFourBoxesArray[i].hitTestObject(refM.carTwoBoxesArray[s]))					{						this.x -=  _vx4;						this.y -=  _vx4;					}				}			}			if (this.x < refM.boundyLeft || this.x > refM.boundyRight || this.y < refM.boundyTop || this.y > refM.boundyBottom)			{				refM.carFourInd.alpha = .8;			}			else			{				refM.carFourInd.alpha = 0;			}			destinationX4 = refM.cFourTarg.x;			destinationY4 = refM.cFourTarg.y;			_dx4 = this.x - destinationX4;			_dy4 = this.y - destinationY4;			var rotateTo4:Number = refM.getDegrees(refM.getRadians(_dx4,_dy4));			if ((rotateTo4 > this.rotation + 180))			{				rotateTo4 -=  360;			}			if ((rotateTo4 < this.rotation - 180))			{				rotateTo4 +=  360;			}			trueRotation4 = (rotateTo4 - this.rotation) / rotateSpeedMax4;			this.rotation +=  trueRotation4;			_vx4 +=  (destinationX4 - this.x) / moveSpeedMax4;			_vy4 +=  (destinationY4 - this.y) / moveSpeedMax4;			_vx4 *=  decay4;			_vy4 *=  decay4;			if ((refM.getDistance(_dx4,_dy4) < 50))			{				trueRotation4 *=  .4;			}			this.x +=  _vx4;			this.y +=  _vy4;		}		public function carFourIndicatorRotate()		{			carFourIndRotation = Math.round((180 - Math.atan2(this.x - refM.carFourInd.x,this.y - refM.carFourInd.y) * 180 / Math.PI));			refM.carFourInd.rotation = carFourIndRotation;		}	}}