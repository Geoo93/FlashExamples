package {	import flash.display.*;	import flash.events.*;	import flash.filters.*;	import flash.geom.*;	import flash.text.*;	import com.greensock.*;	import com.greensock.easing.*;	public class Main extends MovieClip	{		public var pausee:Boolean = false;		public var menuBoxes:String = "paused";		public var MainCarBoxesArray:Array = new Array();		public var carOneBoxesArray:Array = new Array();		public var carTwoBoxesArray:Array = new Array();		public var carFourBoxesArray:Array = new Array();		public var ArenaHitArrays:Array = new Array();		public var myColorTransform = new ColorTransform  ;		public var myColorTransform2 = new ColorTransform  ;		public var myColorTransform3 = new ColorTransform  ;		public var myColorTransform4 = new ColorTransform  ;		public var myColorTransform5 = new ColorTransform  ;		public var myColor1:uint = Math.random() * 0xF70D1A;		public var myColor2:uint = Math.random() * 0xFFFFFF;		public var myColor3:uint = Math.random() * 0xFFFFFF;		public var filter_glow:GlowFilter = new GlowFilter(glow_color,glow_alpha,glow_blurX,glow_blurY,glow_strength,glow_quality);		public var glow_color:Number = myColor1;		public var glow_alpha:Number = 0.6;		public var glow_blurX:Number = 5;		public var glow_blurY:Number = 5;		public var glow_strength:Number = 2;		public var glow_quality:Number = 3;		public var boundyLeft:Number = 0;		public var boundyTop:Number = 0;		public var boundyRight:Number = 0;		public var boundyBottom:Number = 0;		public var pointsNum:Number = 0;		public var bonusNum:Number = 0;		public var collectorNum:Number = 0;		public var gameCount:Number = 0;		public var gameTimerM:Number = 0;		public var gameTimerS:Number = 0;		public var xDis1:Number = 0;		public var yDis1:Number = 0;		public var Dis1:Number = 0;		public var xDis2:Number = 0;		public var yDis2:Number = 0;		public var Dis2:Number = 0;		public var xDis4:Number = 0;		public var yDis4:Number = 0;		public var Dis4:Number = 0;		public var currentFrameNum:Number = 1;		public var carOneHitState:Boolean = false;		public var carOneCount:Number = 0;		public var carTwoHitState:Boolean = false;		public var carTwoCount:Number = 0;		public var carFourHitState:Boolean = false;		public var carFourCount:Number = 0;		public var mainCarSpawn:Boolean = false;		public var colourChange:Boolean = false;		public var myFormat:TextFormat = new TextFormat  ;		public var myFormat2:TextFormat = new TextFormat  ;		public var mainCarColour:Boolean = false;		public var obState:Boolean = false;		public var obCount:Number = 0;		public function Main()		{			stage.addEventListener(Event.ENTER_FRAME,gL);			stage.addEventListener(MouseEvent.CLICK,mouseClick);			stage.addEventListener(KeyboardEvent.KEY_DOWN, kDown);			startBox.sBut.inLayer.buttonMode = true;		}		public function gL(myEvent:Event):void		{			if (obState == false)			{				obText.visible = false;				myColorTransform5.color = Math.random() * 0xffffff;				obText.transform.colorTransform = myColorTransform5;											}			if (obState == true)			{				obText.visible = true;				obCount += 1;				obText.alpha -= .005;				if(obCount > 100)				{					obState = false;				}			}			if (colourChange == false)			{				myColorTransform.color = Math.random() * 0xFFFFFF;				arenaOut.transform.colorTransform = myColorTransform;				myColorTransform2.color = Math.random() * 0xFFFFFF;				scoreText.transform.colorTransform = myColorTransform2;				colectionsText.transform.colorTransform = myColorTransform2;				mText.transform.colorTransform = myColorTransform2;				sText.transform.colorTransform = myColorTransform2;				myColorTransform3.color = Math.random() * 0xFFFFFF;				startBox.bStartBox.transform.colorTransform = myColorTransform3;				colourChange = true;			}			if (menuBoxes == "start")			{				startBox.visible = false;				pausee = false;				obState = true;				menuBoxes = "null";							}			if (menuBoxes == "paused")			{				goBox.visible = false;				pausee = true;				if (startBox.sBut.inLayer.alpha >= .5)				{					TweenNano.to(startBox.sBut.inLayer,1,{alpha:0});				}				if (startBox.sBut.inLayer.alpha == 0)				{					TweenNano.to(startBox.sBut.inLayer,1,{alpha:.6});					myColorTransform3.color = Math.random() * 0xffffff;					startBox.sBut.inLayer.transform.colorTransform = myColorTransform3;				}			}									if (pausee == false)			{				if (currentFrameNum >= 40)				{					pausee = true;					goBox.visible = true;				}				arenaOut.alpha = 1;				mTarg.visible = false;				cThreeTarg.visible = false;				boundyLeft = arenaOut.x - 300;				boundyTop = arenaOut.y - 300;				boundyRight = arenaOut.x + 300;				boundyBottom = arenaOut.y + 300;				var scoreNum:Number = pointsNum + bonusNum;				colectionsText.text = "Items: " + collectorNum.toString();				goBox.totalCollect.text = "Total Items: " + collectorNum.toString();				scoreText.text = "Score: " + Math.round(scoreNum).toString();				goBox.endScore.text = "Final Score: " + Math.round(scoreNum).toString();				goBox.totalCollect.setTextFormat(myFormat2);				goBox.endScore.setTextFormat(myFormat2);				myFormat2.color = myColor1;				myFormat2.size = 70;				colectionsText.setTextFormat(myFormat);				scoreText.setTextFormat(myFormat);				myFormat.color = myColor1;				myFormat.size = 15;				if (gameTimerM >=1)				{					mText.visible = true;				}				else				{					mText.visible = false;				}				gameCount +=  1;				if (gameCount >= 23)				{					gameTimerS +=  1;					gameCount = 0;				}				if (gameTimerS < 10)				{					sText.text = "0";				}				else				{					sText.text = "";				}				sText.appendText(String(gameTimerS));				sText.setTextFormat(myFormat);				if (gameTimerS >= 60)				{					gameTimerM +=  1;					gameTimerS = 0;				}				if (gameTimerM < 10)				{					mText.text = "0";				}				else				{					mText.text = "";				}				mText.appendText(String(gameTimerM));				mText.setTextFormat(myFormat);			}		}		function getDistance(delta_x:Number, delta_y:Number):Number		{			return Math.sqrt((delta_x*delta_x)+(delta_y*delta_y));		}		function getRadians(delta_x:Number, delta_y:Number):Number		{			var r:Number = Math.atan2(delta_y,delta_x);			if (delta_y < 0)			{				r +=  (2 * Math.PI);			}			return r;		}		function getDegrees(radians:Number):Number		{			return Math.floor(radians/(Math.PI/180));		}		public function mouseClick(event:MouseEvent):void		{			if (event.target == startBox.sBut.inLayer)			{				menuBoxes = "start";			}		}		function kDown(event:KeyboardEvent):void		{			if (event.keyCode == 80)			{				if (currentFrameNum < 40)				{					pausee = ! pausee;				}			}			if (event.keyCode == 32)			{				colourChange = false;			}		}	}}