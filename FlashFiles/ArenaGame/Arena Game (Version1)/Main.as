package {	import flash.display.*;	import flash.events.*;	import flash.filters.*;	import flash.geom.*;	import flash.text.*;	//import com.greensock.*;	//import com.greensock.easing.*;	public class Main extends MovieClip	{		public var carsArray:Array = new Array();		public var HitBoxesArray:Array = new Array();		public var myColorTransform = new ColorTransform  ;		public var myColor1:uint = Math.random() * 0xF70D1A;		public var myColor2:uint = Math.random() * 0xFFFFFF;		public var myColor3:uint = Math.random() * 0xFFFFFF;				public var filter_glow:GlowFilter = new GlowFilter(glow_color,glow_alpha,glow_blurX,glow_blurY,glow_strength,glow_quality);		public var glow_color:Number = myColor1;		public var glow_alpha:Number = 0.6;		public var glow_blurX:Number = 5;		public var glow_blurY:Number = 5;		public var glow_strength:Number = 2;		public var glow_quality:Number = 3;		public var boundyLeft:Number = 0;		public var boundyTop:Number = 0;		public var boundyRight:Number = 0;		public var boundyBottom:Number = 0;		public var pointsNum:Number = 0;		public var bonusNum:Number = 0;		public var collectorNum:Number = 0;				public var gameCount:Number = 0;		public var gameTimerM:Number = 0;		public var gameTimerS:Number = 0;		//public var GameState:Boolean = false;		public var myFormat:TextFormat = new TextFormat  ;		public function Main()		{			stage.addEventListener(Event.ENTER_FRAME,gL);			stage.addEventListener(MouseEvent.CLICK,mouseClick);			stage.addEventListener(KeyboardEvent.KEY_DOWN, kDown);		}		public function gL(myEvent:Event):void		{			arenaOut.alpha = 1;			cOneTarg.alpha = 0;			cTwoTarg.alpha = 0;			cThreeTarg.alpha = 0;			cFourTarg.alpha = 0;			boundyLeft = arenaOut.x - 300;			boundyTop = arenaOut.y - 300;			boundyRight = arenaOut.x + 300;			boundyBottom = arenaOut.y + 300;			var scoreNum:Number = pointsNum + bonusNum;						colectionsText.text = collectorNum.toString();			scoreText.text = scoreNum.toString();						colectionsText.setTextFormat(myFormat);			scoreText.setTextFormat(myFormat);			myFormat.color = myColor1;			myFormat.size = 15;			if (gameTimerM >=1)			{				mText.visible = true;			}			else			{				mText.visible = false;			}			gameCount +=  1;			if (gameCount >= 24)			{				gameTimerS +=  1;				gameCount = 0;			}			if (gameTimerS < 10)			{				sText.text = "0";			}			else			{				sText.text = "";			}			sText.appendText(String(gameTimerS));			sText.setTextFormat(myFormat);			if (gameTimerS >= 60)			{				gameTimerM +=  1;				gameTimerS = 0;			}			if (gameTimerM < 10)			{				mText.text = "0";			}			else			{				mText.text = "";			}			mText.appendText(String(gameTimerM));			mText.setTextFormat(myFormat);		}		function getDistance(delta_x:Number, delta_y:Number):Number		{			return Math.sqrt((delta_x*delta_x)+(delta_y*delta_y));		}		function getRadians(delta_x:Number, delta_y:Number):Number		{			var r:Number = Math.atan2(delta_y,delta_x);			if (delta_y < 0)			{				r +=  (2 * Math.PI);			}			return r;		}		function getDegrees(radians:Number):Number		{			return Math.floor(radians/(Math.PI/180));		}		public function mouseClick(event:MouseEvent):void		{		}		function kDown(event:KeyboardEvent):void		{			if (event.keyCode == 32)			{				myColor1 = Math.random() * 0xFFFFFF;				myColor3 = Math.random() * 0xFFFFFF;				myColorTransform.color = myColor1;				arenaOut.transform.colorTransform = myColorTransform;								myColorTransform.color = myColor3;				scoreText.transform.colorTransform = myColorTransform;				colectionsText.transform.colorTransform = myColorTransform;				mText.transform.colorTransform = myColorTransform;				sText.transform.colorTransform = myColorTransform;			}		}	}}