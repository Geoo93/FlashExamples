package {	import flash.display.*;	import flash.events.*;	public class CarFour extends MovieClip	{		public var refM:MovieClip;		public var moveSpeedMax4:Number = 2000;		public var rotateSpeedMax4:Number = 15;		public var decay4:Number = .98;		public var destinationX4:int = 0;		public var destinationY4:int = 0;		public var _dx4:Number = 0;		public var _dy4:Number = 0;		public var _vx4:Number = 0;		public var _vy4:Number = 0;		public var trueRotation4:Number = 0;		public var xDist4:Number = 0;		public var yDist4:Number = 0;		public var directDist4:Number = 0;		public var carFourIndRotation:Number;				public var targetFourState:Boolean = false;		public var targetFourCount:Number = 0;		public function CarFour()		{			stage.addEventListener(Event.ENTER_FRAME,gLoop);			refM = MovieClip(this.parent);			refM.carsArray.push(this);		}		function gLoop(event:Event):void		{			if (targetFourState == false)			{				refM.cFourTarg.x = Math.random() * 700;				refM.cFourTarg.y = Math.random() * 700;				targetFourState = true;			}			if (refM.cFourTarg.y > 630 || refM.cFourTarg.y < 70 || refM.cFourTarg.x > 630 || refM.cFourTarg.x < 70)			{				refM.cFourTarg.visible = false;				targetFourState = false;				targetFourCount = 0;			}			else			{				refM.cFourTarg.visible = true;				targetFourCount +=  1;								if (targetFourCount > 80)				{					targetFourCount = 0;					targetFourState = false;				}			}			carFourIndicatorRotate();			if (this.x < refM.boundyLeft || this.x > refM.boundyRight || this.y < refM.boundyTop || this.y > refM.boundyBottom)			{				refM.carFourInd.alpha = .8;			}			else			{				refM.carFourInd.alpha = 0;			}			destinationX4 = refM.cFourTarg.x;			destinationY4 = refM.cFourTarg.y;			_dx4 = this.x - destinationX4;			_dy4 = this.y - destinationY4;			var rotateTo4:Number = refM.getDegrees(refM.getRadians(_dx4,_dy4));			if ((rotateTo4 > this.rotation + 180))			{				rotateTo4 -=  360;			}			if ((rotateTo4 < this.rotation - 180))			{				rotateTo4 +=  360;			}			trueRotation4 = (rotateTo4 - this.rotation) / rotateSpeedMax4;			this.rotation +=  trueRotation4;			_vx4 +=  (destinationX4 - this.x) / moveSpeedMax4;			_vy4 +=  (destinationY4 - this.y) / moveSpeedMax4;			_vx4 *=  decay4;			_vy4 *=  decay4;			if ((refM.getDistance(_dx4,_dy4) < 50))			{				trueRotation4 *=  .5;			}			this.x +=  _vx4;			this.y +=  _vy4;			if (_vy4 < -5 || _vy4 > 5 || _vx4 < -5|| _vx4 > 5)			{				moveSpeedMax4 +=  100;			}			else			{				moveSpeedMax4 = 1000;			}			//if(this.hitTestObject(refM.mCar))//			{//				//moveSpeedMax4 = 20000000;//				//			}			if (this.y < -50)			{				this.y = 750;			}			if (this.y > 750)			{				this.y = -50;			}			if (this.x > 750)			{				this.x = -50;			}			if (this.x < -50)			{				this.x = 750;			}		}		public function carFourIndicatorRotate()		{			carFourIndRotation = Math.round((180 - Math.atan2(this.x - refM.carFourInd.x,this.y - refM.carFourInd.y) * 180 / Math.PI));			refM.carFourInd.rotation = carFourIndRotation;		}	}}