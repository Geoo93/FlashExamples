package {	import flash.display.*;	import flash.events.*;	public class CarOne extends MovieClip	{		public var refM:MovieClip;		public var moveSpeedMax1:Number = 2000;		public var rotateSpeedMax1:Number = 15;		public var decay1:Number = .98;		public var destinationX1:int = 0;		public var destinationY1:int = 0;		public var _dx1:Number = 0;		public var _dy1:Number = 0;		public var _vx1:Number = 0;		public var _vy1:Number = 0;		public var trueRotation1:Number = 0;		public var xDist1:Number = 0;		public var yDist1:Number = 0;		public var directDist1:Number = 0;		public var carOneIndRotation:Number;		public var targetOneState:Boolean = false;		public var targetOneCount:Number = 0;		public function CarOne()		{			stage.addEventListener(Event.ENTER_FRAME,gLoop);			refM = MovieClip(this.parent);			refM.carsArray.push(this);		}		function gLoop(event:Event):void		{						if (targetOneState == false)			{				refM.cOneTarg.x = Math.random() * 700;				refM.cOneTarg.y = Math.random() * 700;				targetOneState = true;			}			if (refM.cOneTarg.y > 630 || refM.cOneTarg.y < 70 || refM.cOneTarg.x > 630 || refM.cOneTarg.x < 70)			{				refM.cOneTarg.visible = false;				targetOneState = false;				targetOneCount = 0;			}			else			{				refM.cOneTarg.visible = true;								targetOneCount += 1;				if(targetOneCount > 80)				{					targetOneCount = 0;					targetOneState = false;				}			}			carOneIndicatorRotate();			if (this.x < refM.boundyLeft || this.x > refM.boundyRight || this.y < refM.boundyTop || this.y > refM.boundyBottom)			{				refM.carOneInd.alpha = .8;			}			else			{				refM.carOneInd.alpha = 0;			}			destinationX1 = refM.cOneTarg.x;			destinationY1 = refM.cOneTarg.y;			_dx1 = this.x - destinationX1;			_dy1 = this.y - destinationY1;			var rotateTo1:Number = refM.getDegrees(refM.getRadians(_dx1,_dy1));			if ((rotateTo1 > this.rotation + 180))			{				rotateTo1 -=  360;			}			if ((rotateTo1 < this.rotation - 180))			{				rotateTo1 +=  360;			}			trueRotation1 = (rotateTo1 - this.rotation) / rotateSpeedMax1;			this.rotation +=  trueRotation1;			_vx1 +=  (destinationX1 - this.x) / moveSpeedMax1;			_vy1 +=  (destinationY1 - this.y) / moveSpeedMax1;			_vx1 *=  decay1;			_vy1 *=  decay1;			if ((refM.getDistance(_dx1,_dy1) < 50))			{				trueRotation1 *=  .5;			}			this.x +=  _vx1;			this.y +=  _vy1;			if (_vy1 < -5 || _vy1 > 5 || _vx1 < -5|| _vx1 > 5)			{				moveSpeedMax1 +=  100;			}			else			{				moveSpeedMax1 = 1000;			}			if (this.y < -50)			{				this.y = 750;			}			if (this.y > 750)			{				this.y = -50;			}			if (this.x > 750)			{				this.x = -50;			}			if (this.x < -50)			{				this.x = 750;			}		}		public function carOneIndicatorRotate()		{			carOneIndRotation = Math.round((180 - Math.atan2(this.x - refM.carOneInd.x,this.y - refM.carOneInd.y) * 180 / Math.PI));			refM.carOneInd.rotation = carOneIndRotation;		}	}}