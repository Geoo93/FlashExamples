package {	import flash.display.MovieClip;	import flash.events.Event;	public class Car3 extends MovieClip	{		var refM:MovieClip;		var moveSpeedMax:Number = 2000;		var rotateSpeedMax:Number = 15;		var decay:Number = .98;		var _dx:Number = 0;		var _dy:Number = 0;		var _vx:Number = 0;		var _vy:Number = 0;		var trueRotation:Number = 0;		var car3Count:Number = 0;		var isTrue3:Boolean = true;		var startMove3:Boolean = false;		var carRandomPos:Number = 0;				var isActive3:Boolean = false;		public function Car3()		{			stage.addEventListener(Event.ENTER_FRAME,gLoop);			refM = MovieClip(this.parent);			refM.carsArray.push(this);		}		function gLoop(event:Event):void		{						refM.car3Text.text = "Car3 " + car3Count;						for (var s:Number = 0; s < refM.carsArray.length; s += 1)			{				if (refM.carsArray[2].hitTestObject(refM.carsArray[0]) || refM.carsArray[2].hitTestObject(refM.carsArray[1]) || refM.carsArray[2].hitTestObject(refM.carsArray[3]) || refM.carsArray[2].hitTestObject(refM.carsArray[4]))				{					refM.carsArray[2].alpha = .5					//isActive3 = false;//					isTrue3 = true;//					startMove3 = false;									}			}			if (isActive3 == false)			{				if (isTrue3 == true)				{					carRandomPos = Math.random() * 1;					carRandomPos = Math.round(carRandomPos);					isTrue3 = false;				}				if (startMove3 == false)				{										if (carRandomPos == 0)					{						this.x = 850;						this.y = 500;						this.rotation = 0;					}					if (carRandomPos == 1)					{						this.x = 850;						this.y = 100;						this.rotation = 0;					}					car3Count += 1										if (car3Count > 100)					{						car3Count = 0;						startMove3 = true;					}				}				if (startMove3 == true)				{										isActive3 = true;				}			}			if (isActive3 == true)			{				_dx = this.x - refM.destinationX;				_dy = this.y - refM.destinationY;				var rotateTo:Number = getDegrees(getRadians(_dx,_dy));				if ((rotateTo > this.rotation + 180))				{					rotateTo -=  360;				}				if ((rotateTo < this.rotation - 180))				{					rotateTo +=  360;				}				trueRotation = (rotateTo - this.rotation) / rotateSpeedMax;				this.rotation +=  trueRotation;				_vx +=  (refM.destinationX - this.x) / moveSpeedMax;				_vy +=  (refM.destinationY - this.y) / moveSpeedMax;				_vx *=  decay;				_vy *=  decay;				if ((getDistance(_dx,_dy) < 50))				{					trueRotation *=  .5;				}				this.x +=  _vx;				this.y +=  _vy;				function getDistance(delta_x:Number, delta_y:Number):Number				{					return Math.sqrt((delta_x*delta_x)+(delta_y*delta_y));				}				function getRadians(delta_x:Number, delta_y:Number):Number				{					var r:Number = Math.atan2(delta_y,delta_x);					if (delta_y < 0)					{						r +=  (2 * Math.PI);					}					return r;				}				function getDegrees(radians:Number):Number				{					return Math.floor(radians/(Math.PI/180));				}				if (this.y < -80)				{					this.y = 680;				}				if (this.y > 680)				{					this.y = -80;				}				if (this.x > 880)				{					this.x = -80;				}				if (this.x < -80)				{					this.x = 880;				}			}		}	}}