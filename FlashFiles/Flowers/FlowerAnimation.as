package  {		import flash.events.Event;	import flash.geom.Point;	import flash.utils.setTimeout;		public class FlowerAnimation extends BasicAnimation {		// We don't need a constructor. The super class does everything we need		protected var colour:uint; // petal colour		protected var currentPetal:int;		protected var petalSize:Number;		protected var total:int;				// override the begin function of basic animation to make a different effect		override protected function begin():void {			colour = Math.random()*0xFFFFFF;			currentPetal=0;			total=6+Math.random()*5;			petalSize=30+Math.random()*30;			nextPetal();		}				protected function nextPetal(e:Event=null):void {			currentPetal++;			var circle:BasicCircle = new BasicCircle(petalSize, colour, 10+Math.random()*10);			circle.x=petalSize*Math.cos(Math.PI*2*(currentPetal/total));			circle.y=petalSize*Math.sin(Math.PI*2*(currentPetal/total));			if (currentPetal<total) {				circle.addEventListener("shapeComplete", nextPetal);			} else {				circle.addEventListener("shapeComplete", drawCircle);			}			addChild(circle);			}				protected function drawCircle(e:Event):void {			var circle:BasicCircle = new BasicCircle(petalSize, 0xFFCC32, 20+Math.random()*20);			setTimeout(finish, 1000);			addChild(circle);		}	}	}