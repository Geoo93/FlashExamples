package {    import flash.display.Sprite;    import flash.display.Graphics;    import flash.events.Event;    import flash.media.Sound;    import flash.media.SoundChannel;    import flash.media.SoundMixer;    import flash.net.URLRequest;    import flash.utils.ByteArray;    import flash.text.TextField;    import fl.transitions.Tween;	import fl.transitions.TweenEvent;	import fl.transitions.easing.*;    public class Pulser extends Sprite {		[Embed(source="Gem.mp3")]		private var Gem:Class;		private var snd:Sound;		private var channel:SoundChannel;		public var baseScale:Number;		private var scaleTween:Tween;		private var rotationTween:Tween;        public function Pulser() {			baseScale=1;            snd = new Gem();            channel = snd.play();            addEventListener(Event.ENTER_FRAME, onEnterFrame);            channel.addEventListener(Event.SOUND_COMPLETE, onPlaybackComplete);			tweenScale();			tweenRotation();        }				private function tweenScale(t:TweenEvent=null):void {			scaleTween = new Tween(this, "baseScale", Regular.easeInOut, baseScale,								   0.3+Math.random()*2, 100+Math.random()*200);			scaleTween.addEventListener(TweenEvent.MOTION_FINISH, tweenScale);		}				private function tweenRotation(t:TweenEvent=null):void {			rotationTween = new Tween(this, "rotation", Regular.easeInOut, rotation,								   360-Math.random()*720, 100+Math.random()*200);			rotationTween.addEventListener(TweenEvent.MOTION_FINISH, tweenRotation);		}        private function onEnterFrame(event:Event):void {            var bytes:ByteArray = new ByteArray();            const CHANNEL_LENGTH:int = 512;            SoundMixer.computeSpectrum(bytes, false, 0);                        var scaler:Number = 0;                        for (var i:int = 0; i < CHANNEL_LENGTH; i++) {                scaler += Math.abs(bytes.readFloat());            }						// average the scaler			scaler /= CHANNEL_LENGTH;						// set the scale based on the scaler			scaleX=scaleY=baseScale+(scaler*baseScale);			        }                private function onPlaybackComplete(event:Event):void {            channel = snd.play();            channel.addEventListener(Event.SOUND_COMPLETE, onPlaybackComplete);        }    }}