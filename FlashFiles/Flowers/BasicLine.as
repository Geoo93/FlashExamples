package  {		// import shape, event and various tweening classes	import flash.display.Shape;	import flash.events.Event;	import fl.transitions.Tween;	import fl.transitions.TweenEvent;	import fl.transitions.easing.*;	import flash.geom.Point;		public class BasicLine extends Shape {		// make a tweening variable - tweens often fail if not stored		protected var tween:Tween;		// make variables to stored the desired end, colour and thickness		protected var end:Point;		protected var colour:uint;		protected var thickness:Number;		// user must pass a radius, colour and time to tween		public function BasicLine(endPoint:Point, lineColour:uint, lineThickness:Number, time:int) {			// store the necessary information			end = endPoint;			colour = lineColour;			thickness = lineThickness;			// tween nothing... (we can still use the tween's progress!)			tween = new Tween(this, "", Regular.easeInOut, 0, 1, time);			// add listeners to the tween to draw the line and to dispatch an event			tween.addEventListener(TweenEvent.MOTION_CHANGE, update);			tween.addEventListener(TweenEvent.MOTION_FINISH, finish);		}				protected function update(t:TweenEvent):void {			// draw the line based on the tween's progress			graphics.clear();			graphics.lineStyle(thickness, colour);			graphics.moveTo(0,0);			graphics.lineTo(end.x*tween.position, end.y*tween.position);		}				protected function finish(t:TweenEvent):void {			// dispatch a custom event that we can listen for in the animation(s)			dispatchEvent(new Event("shapeComplete"));		}	}	}